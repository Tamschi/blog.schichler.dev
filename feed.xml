<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.schichler.dev/</id><title>Abstraction Haven</title><subtitle>Mostly Rust, sometimes mainly carbohydrates.</subtitle> <updated>2024-11-26T09:34:03+01:00</updated> <author> <name>Tamme Schichler</name> <uri>https://blog.schichler.dev/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.schichler.dev/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blog.schichler.dev/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> Â© 2024 Tamme Schichler </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Rust RFC 3634: Scoped <code>impl Trait for Type</code></title><link href="https://blog.schichler.dev/posts/Rust-RFC-3634_-Scoped-impl-Trait-for-Type/" rel="alternate" type="text/html" title="Rust RFC 3634: Scoped <code>impl Trait for Type</code>" /><published>2024-05-12T18:20:00+02:00</published> <updated>2024-05-12T18:20:00+02:00</updated> <id>https://blog.schichler.dev/posts/Rust-RFC-3634_-Scoped-impl-Trait-for-Type/</id> <content src="https://blog.schichler.dev/posts/Rust-RFC-3634_-Scoped-impl-Trait-for-Type/" /> <author> <name>Tamme Schichler</name> </author> <category term="Rust" /> <category term="Language Design" /> <summary>I just posted my first Rust RFC to fix crate-crate composition. Here's the full initially submitted text for posterity.</summary> </entry> <entry><title>Asteracea (as of right now) ðŸŒ¼</title><link href="https://blog.schichler.dev/posts/Asteracea/" rel="alternate" type="text/html" title="Asteracea (as of right now) ðŸŒ¼" /><published>2022-05-14T15:25:00+02:00</published> <updated>2022-05-19T18:08:06+02:00</updated> <id>https://blog.schichler.dev/posts/Asteracea/</id> <content src="https://blog.schichler.dev/posts/Asteracea/" /> <author> <name>Tamme Schichler</name> </author> <category term="Rust" /> <category term="Asteracea" /> <summary>A bird's-eye view of Asteracea, my frontend framework. Topics include semantic locality, efficient stateful and stateless components, named parameters, efficient VDOM double-buffering with drop-notifications, â€¦.</summary> </entry> <entry><title>Moving</title><link href="https://blog.schichler.dev/posts/Moving/" rel="alternate" type="text/html" title="Moving" /><published>2022-01-06T19:31:17+01:00</published> <updated>2022-02-15T16:31:36+01:00</updated> <id>https://blog.schichler.dev/posts/Moving/</id> <content src="https://blog.schichler.dev/posts/Moving/" /> <author> <name>Tamme Schichler</name> </author> <category term="Blogging" /> <summary>I'm leaving Hashnode. Here's why and how.</summary> </entry> <entry><title>Cheese-olive dish</title><link href="https://blog.schichler.dev/posts/Cheese-olive-dish/" rel="alternate" type="text/html" title="Cheese-olive dish" /><published>2021-12-15T18:48:00+01:00</published> <updated>2022-01-12T16:21:15+01:00</updated> <id>https://blog.schichler.dev/posts/Cheese-olive-dish/</id> <content src="https://blog.schichler.dev/posts/Cheese-olive-dish/" /> <author> <name>Tamme Schichler</name> </author> <category term="Cooking" /> <category term="Salads" /> <summary>A snack sure-ish to make you more alert.</summary> </entry> <entry><title>Pinning in plain English</title><link href="https://blog.schichler.dev/posts/Pinning-in-plain-English/" rel="alternate" type="text/html" title="Pinning in plain English" /><published>2021-11-24T17:10:00+01:00</published> <updated>2022-01-08T02:01:25+01:00</updated> <id>https://blog.schichler.dev/posts/Pinning-in-plain-English/</id> <content src="https://blog.schichler.dev/posts/Pinning-in-plain-English/" /> <author> <name>Tamme Schichler</name> </author> <category term="Rust" /> <category term="Pinning" /> <summary>Pinning in Rust is a powerful and very convenient pattern that is, in my eyes, not supported well enough in the wider ecosystem. [â€¦] This post is my attempt to make the feature more approachable, to hopefully inspire more developers to make their crates pinning-aware where that would be helpful.</summary> </entry> <entry><title>Intrusive Smart Pointers + Heap Only Types = ðŸ’ž</title><link href="https://blog.schichler.dev/posts/Intrusive-Smart-Pointers-+-Heap-Only-Types-=/" rel="alternate" type="text/html" title="Intrusive Smart Pointers + Heap Only Types = ðŸ’ž" /><published>2021-11-14T18:44:00+01:00</published> <updated>2022-01-11T21:54:32+01:00</updated> <id>https://blog.schichler.dev/posts/Intrusive-Smart-Pointers-+-Heap-Only-Types-=/</id> <content src="https://blog.schichler.dev/posts/Intrusive-Smart-Pointers-+-Heap-Only-Types-=/" /> <author> <name>Tamme Schichler</name> </author> <category term="Rust" /> <summary>Reducing API complexity with an embedded reference counter.</summary> </entry> <entry><title>Some thoughts on Bubble</title><link href="https://blog.schichler.dev/posts/Some-thoughts-on-Bubble/" rel="alternate" type="text/html" title="Some thoughts on Bubble" /><published>2021-07-19T19:51:00+02:00</published> <updated>2022-01-12T16:21:15+01:00</updated> <id>https://blog.schichler.dev/posts/Some-thoughts-on-Bubble/</id> <content src="https://blog.schichler.dev/posts/Some-thoughts-on-Bubble/" /> <author> <name>Tamme Schichler</name> </author> <category term="Web Development" /> <summary>Examination of a "No Code" web development system.</summary> </entry> <entry><title>Semantic FFI Bindings in Rust - Reactivating the Borrow Checker</title><link href="https://blog.schichler.dev/posts/Semantic-FFI-Bindings-in-Rust-Reactivating-the-Borrow-Checker/" rel="alternate" type="text/html" title="Semantic FFI Bindings in Rust - Reactivating the Borrow Checker" /><published>2020-10-31T16:10:00+01:00</published> <updated>2022-01-08T02:01:25+01:00</updated> <id>https://blog.schichler.dev/posts/Semantic-FFI-Bindings-in-Rust-Reactivating-the-Borrow-Checker/</id> <content src="https://blog.schichler.dev/posts/Semantic-FFI-Bindings-in-Rust-Reactivating-the-Borrow-Checker/" /> <author> <name>Tamme Schichler</name> </author> <category term="Rust" /> <category term="FFI" /> <summary>I recently succeeded at writing a watch app for my old Kickstarter Pebble and made some discoveries in the process that may be interesting to others working on similar projects or FFI bindings in general.</summary> </entry> <entry><title>Building non-containers with Docker and VS Code</title><link href="https://blog.schichler.dev/posts/Building-non-containers-with-Docker-and-VS-Code/" rel="alternate" type="text/html" title="Building non-containers with Docker and VS Code" /><published>2020-02-27T14:48:00+01:00</published> <updated>2022-01-08T02:01:25+01:00</updated> <id>https://blog.schichler.dev/posts/Building-non-containers-with-Docker-and-VS-Code/</id> <content src="https://blog.schichler.dev/posts/Building-non-containers-with-Docker-and-VS-Code/" /> <author> <name>Tamme Schichler</name> </author> <category term="Build Automation" /> <summary>I recently set up containerised builds for my website [It's not quite ready yet.] and thought I'd share the configuration for others to use as reference.</summary> </entry> </feed>
